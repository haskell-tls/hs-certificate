env:
 - CABALVER=1.18 GHCVER=7.8.3
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=1.24 GHCVER=8.0.2
 - CABALVER=1.24 GHCVER=8.2.2
 - CABALVER=head GHCVER=head

matrix:
  allow_failures:
   - env: CABALVER=head GHCVER=head

before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cd x509
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - if [ "${CABAL_LIB_1_18}" = "1" ]; then
    cabal install Cabal --constraint Cabal==1.18.*;
   fi
 - if [ "${RUNTEST}" = "0" ]; then
    cabal install --only-dependencies;
   else
    cabal install --only-dependencies --enable-tests;
   fi
 - cd ../x509-store
 - if [ "${RUNTEST}" = "0" ]; then
    cabal install --only-dependencies;
   else
    cabal install --only-dependencies --enable-tests;
   fi
 - cd ../x509-system
 - cabal install --only-dependencies
 - cd ../x509-validation
 - if [ "${RUNTEST}" = "0" ]; then
    cabal install --only-dependencies;
   else
    cabal install --only-dependencies --enable-tests;
   fi

script:
 - cd ../x509
 - if [ "${RUNTEST}" != "0" ]; then
      cabal configure --enable-tests -v2;
   else
      cabal configure -v2;
   fi
 - cabal build
 - if [ "${RUNTEST}" != "0" ]; then
       cabal test;
   fi;
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
 - cd ../../x509-store
 - if [ "${RUNTEST}" != "0" ]; then
      cabal configure --enable-tests -v2;
   else
      cabal configure -v2;
   fi
 - cabal build
 - if [ "${RUNTEST}" != "0" ]; then
       cabal test;
   fi;
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
 - cd ../../x509-system
 - cabal configure -v2
 - cabal build
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
 - cd ../../x509-validation
 - if [ "${RUNTEST}" != "0" ]; then
      cabal configure --enable-tests -v2;
   else
      cabal configure -v2;
   fi
 - cabal build
 - if [ "${RUNTEST}" != "0" ]; then
       cabal test;
   fi;
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
